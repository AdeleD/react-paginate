{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":[],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport createFragment from 'react-addons-create-fragment';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount             : PropTypes.number.isRequired,\n    pageRangeDisplayed    : PropTypes.number.isRequired,\n    marginPagesDisplayed  : PropTypes.number.isRequired,\n    previousLabel         : PropTypes.node,\n    nextLabel             : PropTypes.node,\n    breakLabel            : PropTypes.node,\n    hrefBuilder           : PropTypes.func,\n    onPageChange          : PropTypes.func,\n    initialPage           : PropTypes.number,\n    forcePage             : PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName    : PropTypes.string,\n    pageClassName         : PropTypes.string,\n    pageLinkClassName     : PropTypes.string,\n    activeClassName       : PropTypes.string,\n    previousClassName     : PropTypes.string,\n    nextClassName         : PropTypes.string,\n    previousLinkClassName : PropTypes.string,\n    nextLinkClassName     : PropTypes.string,\n    disabledClassName     : PropTypes.string,\n    breakClassName        : PropTypes.string\n  };\n\n  static defaultProps = {\n    pageCount             : 10,\n    pageRangeDisplayed    : 2,\n    marginPagesDisplayed  : 3,\n    activeClassName       : \"selected\",\n    previousClassName     : \"previous\",\n    nextClassName         : \"next\",\n    previousLabel         : \"Previous\",\n    nextLabel             : \"Next\",\n    breakLabel            : \"...\",\n    disabledClassName     : \"disabled\",\n    disableInitialCallback: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.initialPage ? props.initialPage :\n                props.forcePage   ? props.forcePage :\n                0\n    };\n  }\n\n  componentDidMount() {\n    // Call the callback with the initialPage item:\n    if (typeof(this.props.initialPage) !== 'undefined' && !this.props.disableInitialCallback) {\n      this.callCallback(this.props.initialPage);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof(nextProps.forcePage) !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {\n      this.setState({selected: nextProps.forcePage});\n    }\n  }\n\n  handlePreviousPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (this.state.selected > 0) {\n      this.handlePageSelected(this.state.selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (this.state.selected < this.props.pageCount - 1) {\n      this.handlePageSelected(this.state.selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({selected: selected});\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  hrefBuilder(pageIndex) {\n    if (this.props.hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      return this.props.hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (typeof(this.props.onPageChange) !== \"undefined\" &&\n        typeof(this.props.onPageChange) === \"function\") {\n      this.props.onPageChange({selected: selectedItem});\n    }\n  };\n\n  getPageElement(index) {\n    return <PageView\n      onClick={this.handlePageSelected.bind(null, index)}\n      selected={this.state.selected === index}\n      pageClassName={this.props.pageClassName}\n      pageLinkClassName={this.props.pageLinkClassName}\n      activeClassName={this.props.activeClassName}\n      extraAriaContext={this.props.extraAriaContext}\n      href={this.hrefBuilder(index)}\n      page={index + 1} />\n  }\n\n  pagination = () => {\n    let items = {};\n\n    if (this.props.pageCount <= this.props.pageRangeDisplayed) {\n\n      for (let index = 0; index < this.props.pageCount; index++) {\n        items['key' + index] = this.getPageElement(index);\n      }\n\n    } else {\n\n      let leftSide  = (this.props.pageRangeDisplayed / 2);\n      let rightSide = (this.props.pageRangeDisplayed - leftSide);\n\n      if (this.state.selected > this.props.pageCount - this.props.pageRangeDisplayed / 2) {\n        rightSide = this.props.pageCount - this.state.selected;\n        leftSide  = this.props.pageRangeDisplayed - rightSide;\n      }\n      else if (this.state.selected < this.props.pageRangeDisplayed / 2) {\n        leftSide  = this.state.selected;\n        rightSide = this.props.pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = (index) => this.getPageElement(index);\n\n      for (index = 0; index < this.props.pageCount; index++) {\n\n        page = index + 1;\n\n        if (page <= this.props.marginPagesDisplayed) {\n          items['key' + index] = createPageView(index);\n          continue;\n        }\n\n        if (page > this.props.pageCount - this.props.marginPagesDisplayed) {\n          items['key' + index] = createPageView(index);\n          continue;\n        }\n\n        if ((index >= this.state.selected - leftSide) && (index <= this.state.selected + rightSide)) {\n          items['key' + index] = createPageView(index);\n          continue;\n        }\n\n        let keys            = Object.keys(items);\n        let breakLabelKey   = keys[keys.length - 1];\n        let breakLabelValue = items[breakLabelKey];\n\n        if (this.props.breakLabel && breakLabelValue !== breakView) {\n          breakView = (\n            <BreakView\n              breakLabel={this.props.breakLabel}\n              breakClassName={this.props.breakClassName}\n            />\n          );\n\n          items['key' + index] = breakView;\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    let disabled = this.props.disabledClassName;\n\n    const previousClasses = classNames(this.props.previousClassName,\n                                       {[disabled]: this.state.selected === 0});\n\n    const nextClasses = classNames(this.props.nextClassName,\n                                   {[disabled]: this.state.selected === this.props.pageCount - 1});\n\n    return (\n      <ul className={this.props.containerClassName}>\n        <li className={previousClasses}>\n          <a onClick={this.handlePreviousPage}\n             className={this.props.previousLinkClassName}\n             href={this.hrefBuilder(this.state.selected - 1)}\n             tabIndex=\"0\"\n             onKeyPress={this.handlePreviousPage}>\n            {this.props.previousLabel}\n          </a>\n        </li>\n\n        {createFragment(this.pagination())}\n\n        <li className={nextClasses}>\n          <a onClick={this.handleNextPage}\n             className={this.props.nextLinkClassName}\n             href={this.hrefBuilder(this.state.selected + 1)}\n             tabIndex=\"0\"\n             onKeyPress={this.handleNextPage}>\n            {this.props.nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n};\n"]}