{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","handlePreviousPage","selected","state","evt","preventDefault","returnValue","handlePageSelected","handleNextPage","pageCount","setState","callCallback","selectedItem","onPageChange","pagination","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","index","getPageElement","leftSide","rightSide","page","breakView","createPageView","keys","Object","breakLabelKey","length","breakLabelValue","initialPage","forcePage","disableInitialCallback","nextProps","pageIndex","hrefBuilder","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","extraAriaContext","bind","disabledClassName","disabledLinkClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","disabled","disabledLink","previousClasses","nextClasses","previousLinkClasses","nextLinkClasses","propTypes","number","isRequired","node","func","bool","string","defaultProps"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAGqBA,iB;;;AAyCnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAAA,UAwBnBC,kBAxBmB,GAwBE,eAAO;AAAA,UAClBC,QADkB,GACL,MAAKC,KADA,CAClBD,QADkB;;AAE1BE,UAAIC,cAAJ,GAAqBD,IAAIC,cAAJ,EAArB,GAA6CD,IAAIE,WAAJ,GAAkB,KAA/D;AACA,UAAIJ,WAAW,CAAf,EAAkB;AAChB,cAAKK,kBAAL,CAAwBL,WAAW,CAAnC,EAAsCE,GAAtC;AACD;AACF,KA9BkB;;AAAA,UAgCnBI,cAhCmB,GAgCF,eAAO;AAAA,UACdN,QADc,GACD,MAAKC,KADJ,CACdD,QADc;AAAA,UAEdO,SAFc,GAEA,MAAKT,KAFL,CAEdS,SAFc;;;AAItBL,UAAIC,cAAJ,GAAqBD,IAAIC,cAAJ,EAArB,GAA6CD,IAAIE,WAAJ,GAAkB,KAA/D;AACA,UAAIJ,WAAWO,YAAY,CAA3B,EAA8B;AAC5B,cAAKF,kBAAL,CAAwBL,WAAW,CAAnC,EAAsCE,GAAtC;AACD;AACF,KAxCkB;;AAAA,UA0CnBG,kBA1CmB,GA0CE,UAACL,QAAD,EAAWE,GAAX,EAAmB;AACtCA,UAAIC,cAAJ,GAAqBD,IAAIC,cAAJ,EAArB,GAA6CD,IAAIE,WAAJ,GAAkB,KAA/D;;AAEA,UAAI,MAAKH,KAAL,CAAWD,QAAX,KAAwBA,QAA5B,EAAsC;;AAEtC,YAAKQ,QAAL,CAAc,EAACR,UAAUA,QAAX,EAAd;;AAEA;AACA,YAAKS,YAAL,CAAkBT,QAAlB;AACD,KAnDkB;;AAAA,UAgEnBS,YAhEmB,GAgEJ,UAACC,YAAD,EAAkB;AAC/B,UAAI,OAAO,MAAKZ,KAAL,CAAWa,YAAlB,KAAoC,WAApC,IACA,OAAO,MAAKb,KAAL,CAAWa,YAAlB,KAAoC,UADxC,EACoD;AAClD,cAAKb,KAAL,CAAWa,YAAX,CAAwB,EAACX,UAAUU,YAAX,EAAxB;AACD;AACF,KArEkB;;AAAA,UA6FnBE,UA7FmB,GA6FN,YAAM;AACjB,UAAIC,QAAQ,EAAZ;AADiB,wBAQb,MAAKf,KARQ;AAAA,UAGfgB,kBAHe,eAGfA,kBAHe;AAAA,UAIfP,SAJe,eAIfA,SAJe;AAAA,UAKfQ,oBALe,eAKfA,oBALe;AAAA,UAMfC,UANe,eAMfA,UANe;AAAA,UAOfC,cAPe,eAOfA,cAPe;AAAA,UAUTjB,QAVS,GAUI,MAAKC,KAVT,CAUTD,QAVS;;;AAYjB,UAAIO,aAAaO,kBAAjB,EAAqC;;AAEnC,aAAK,IAAII,QAAQ,CAAjB,EAAoBA,QAAQX,SAA5B,EAAuCW,OAAvC,EAAgD;AAC9CL,gBAAM,QAAQK,KAAd,IAAuB,MAAKC,cAAL,CAAoBD,KAApB,CAAvB;AACD;AAEF,OAND,MAMO;;AAEL,YAAIE,WAAaN,qBAAqB,CAAtC;AACA,YAAIO,YAAaP,qBAAqBM,QAAtC;;AAEA,YAAIpB,WAAWO,YAAYO,qBAAqB,CAAhD,EAAmD;AACjDO,sBAAYd,YAAYP,QAAxB;AACAoB,qBAAYN,qBAAqBO,SAAjC;AACD,SAHD,MAIK,IAAIrB,WAAWc,qBAAqB,CAApC,EAAuC;AAC1CM,qBAAYpB,QAAZ;AACAqB,sBAAYP,qBAAqBM,QAAjC;AACD;;AAED,YAAIF,eAAJ;AACA,YAAII,aAAJ;AACA,YAAIC,kBAAJ;AACA,YAAIC,iBAAiB,SAAjBA,cAAiB,CAACN,KAAD;AAAA,iBAAW,MAAKC,cAAL,CAAoBD,KAApB,CAAX;AAAA,SAArB;;AAEA,aAAKA,SAAQ,CAAb,EAAgBA,SAAQX,SAAxB,EAAmCW,QAAnC,EAA4C;;AAE1CI,iBAAOJ,SAAQ,CAAf;;AAEA,cAAII,QAAQP,oBAAZ,EAAkC;AAChCF,kBAAM,QAAQK,MAAd,IAAuBM,eAAeN,MAAf,CAAvB;AACA;AACD;;AAED,cAAII,OAAOf,YAAYQ,oBAAvB,EAA6C;AAC3CF,kBAAM,QAAQK,MAAd,IAAuBM,eAAeN,MAAf,CAAvB;AACA;AACD;;AAED,cAAKA,UAASlB,WAAWoB,QAArB,IAAmCF,UAASlB,WAAWqB,SAA3D,EAAuE;AACrER,kBAAM,QAAQK,MAAd,IAAuBM,eAAeN,MAAf,CAAvB;AACA;AACD;;AAED,cAAIO,OAAkBC,OAAOD,IAAP,CAAYZ,KAAZ,CAAtB;AACA,cAAIc,gBAAkBF,KAAKA,KAAKG,MAAL,GAAc,CAAnB,CAAtB;AACA,cAAIC,kBAAkBhB,MAAMc,aAAN,CAAtB;;AAEA,cAAIX,cAAca,oBAAoBN,SAAtC,EAAiD;AAC/CA,wBACE;AACE,0BAAYP,UADd;AAEE,8BAAgBC;AAFlB,cADF;;AAOAJ,kBAAM,QAAQK,MAAd,IAAuBK,SAAvB;AACD;AACF;AACF;;AAED,aAAOV,KAAP;AACD,KAvKkB;;AAGjB,UAAKZ,KAAL,GAAa;AACXD,gBAAUF,MAAMgC,WAAN,GAAoBhC,MAAMgC,WAA1B,GACAhC,MAAMiC,SAAN,GAAoBjC,MAAMiC,SAA1B,GACA;AAHC,KAAb;AAHiB;AAQlB;;;;wCAEmB;AAAA,mBAC8B,KAAKjC,KADnC;AAAA,UACVgC,WADU,UACVA,WADU;AAAA,UACGE,sBADH,UACGA,sBADH;AAElB;;AACA,UAAI,OAAOF,WAAP,KAAwB,WAAxB,IAAuC,CAACE,sBAA5C,EAAoE;AAClE,aAAKvB,YAAL,CAAkBqB,WAAlB;AACD;AACF;;;8CAEyBG,S,EAAW;AACnC,UAAI,OAAOA,UAAUF,SAAjB,KAAgC,WAAhC,IAA+C,KAAKjC,KAAL,CAAWiC,SAAX,KAAyBE,UAAUF,SAAtF,EAAiG;AAC/F,aAAKvB,QAAL,CAAc,EAACR,UAAUiC,UAAUF,SAArB,EAAd;AACD;AACF;;;gCA+BWG,S,EAAW;AAAA,oBACc,KAAKpC,KADnB;AAAA,UACbqC,WADa,WACbA,WADa;AAAA,UACA5B,SADA,WACAA,SADA;;AAErB,UAAI4B,eACFD,cAAc,KAAKjC,KAAL,CAAWD,QADvB,IAEFkC,aAAa,CAFX,IAGFA,YAAY3B,SAHd,EAIE;AACA,eAAO4B,YAAYD,YAAY,CAAxB,CAAP;AACD;AACF;;;mCASchB,K,EAAO;AAAA,UACZlB,QADY,GACC,KAAKC,KADN,CACZD,QADY;AAAA,oBAQhB,KAAKF,KARW;AAAA,UAGlBsC,aAHkB,WAGlBA,aAHkB;AAAA,UAIlBC,iBAJkB,WAIlBA,iBAJkB;AAAA,UAKlBC,eALkB,WAKlBA,eALkB;AAAA,UAMlBC,mBANkB,WAMlBA,mBANkB;AAAA,UAOlBC,gBAPkB,WAOlBA,gBAPkB;;;AAUpB,aAAO;AACL,iBAAS,KAAKnC,kBAAL,CAAwBoC,IAAxB,CAA6B,IAA7B,EAAmCvB,KAAnC,CADJ;AAEL,kBAAUlB,aAAakB,KAFlB;AAGL,uBAAekB,aAHV;AAIL,2BAAmBC,iBAJd;AAKL,yBAAiBC,eALZ;AAML,6BAAqBC,mBANhB;AAOL,0BAAkBC,gBAPb;AAQL,cAAM,KAAKL,WAAL,CAAiBjB,KAAjB,CARD;AASL,cAAMA,QAAQ,CATT,GAAP;AAUD;;;6BA8EQ;AAAA,oBAYH,KAAKpB,KAZF;AAAA,UAEL4C,iBAFK,WAELA,iBAFK;AAAA,UAGLC,qBAHK,WAGLA,qBAHK;AAAA,UAILC,iBAJK,WAILA,iBAJK;AAAA,UAKLC,aALK,WAKLA,aALK;AAAA,UAMLtC,SANK,WAMLA,SANK;AAAA,UAOLuC,kBAPK,WAOLA,kBAPK;AAAA,UAQLC,qBARK,WAQLA,qBARK;AAAA,UASLC,aATK,WASLA,aATK;AAAA,UAULC,iBAVK,WAULA,iBAVK;AAAA,UAWLC,SAXK,WAWLA,SAXK;AAAA,UAcClD,QAdD,GAcc,KAAKC,KAdnB,CAcCD,QAdD;;;AAgBP,UAAImD,WAAWT,iBAAf;AACA,UAAIU,eAAeT,qBAAnB;AACA,UAAMU,kBAAkB,0BAAWT,iBAAX,sBACaO,QADb,EACwBnD,aAAa,CADrC,EAAxB;;AAGA,UAAMsD,cAAc,0BAAWT,aAAX,sBACaM,QADb,EACwBnD,aAAaO,YAAY,CADjD,EAApB;;AAGA,UAAMgD,sBAAsB,0BAAWR,qBAAX,sBACMK,YADN,EACqBpD,aAAa,CADlC,EAA5B;;AAGA,UAAMwD,kBAAkB,0BAAWP,iBAAX,sBACYG,YADZ,EAC2BpD,aAAaO,YAAY,CADpD,EAAxB;;AAGA,aACE;AAAA;AAAA,UAAI,WAAWuC,kBAAf;AACE;AAAA;AAAA,YAAI,WAAWO,eAAf;AACE;AAAA;AAAA,cAAG,SAAS,KAAKtD,kBAAjB;AACG,yBAAWwD,mBADd;AAEG,oBAAM,KAAKpB,WAAL,CAAiBnC,WAAW,CAA5B,CAFT;AAGG,wBAAS,GAHZ;AAIG,0BAAY,KAAKD,kBAJpB;AAKGiD;AALH;AADF,SADF;AAWG,iDAAe,KAAKpC,UAAL,EAAf,CAXH;AAaE;AAAA;AAAA,YAAI,WAAW0C,WAAf;AACE;AAAA;AAAA,cAAG,SAAS,KAAKhD,cAAjB;AACG,yBAAWkD,eADd;AAEG,oBAAM,KAAKrB,WAAL,CAAiBnC,WAAW,CAA5B,CAFT;AAGG,wBAAS,GAHZ;AAIG,0BAAY,KAAKM,cAJpB;AAKG4C;AALH;AADF;AAbF,OADF;AAyBD;;;;;;AAzQkBrD,iB,CACZ4D,S,GAAY;AACjBlD,aAAwB,oBAAUmD,MAAV,CAAiBC,UADxB;AAEjB7C,sBAAwB,oBAAU4C,MAAV,CAAiBC,UAFxB;AAGjB5C,wBAAwB,oBAAU2C,MAAV,CAAiBC,UAHxB;AAIjBX,iBAAwB,oBAAUY,IAJjB;AAKjBV,aAAwB,oBAAUU,IALjB;AAMjB5C,cAAwB,oBAAU4C,IANjB;AAOjBzB,eAAwB,oBAAU0B,IAPjB;AAQjBlD,gBAAwB,oBAAUkD,IARjB;AASjB/B,eAAwB,oBAAU4B,MATjB;AAUjB3B,aAAwB,oBAAU2B,MAVjB;AAWjB1B,0BAAwB,oBAAU8B,IAXjB;AAYjBhB,sBAAwB,oBAAUiB,MAZjB;AAajB3B,iBAAwB,oBAAU2B,MAbjB;AAcjB1B,qBAAwB,oBAAU0B,MAdjB;AAejBzB,mBAAwB,oBAAUyB,MAfjB;AAgBjBxB,uBAAwB,oBAAUwB,MAhBjB;AAiBjBnB,qBAAwB,oBAAUmB,MAjBjB;AAkBjBlB,iBAAwB,oBAAUkB,MAlBjB;AAmBjBhB,yBAAwB,oBAAUgB,MAnBjB;AAoBjBd,qBAAwB,oBAAUc,MApBjB;AAqBjBrB,qBAAwB,oBAAUqB,MArBjB;AAsBjBpB,yBAAwB,oBAAUoB,MAtBjB;AAuBjB9C,kBAAwB,oBAAU8C;AAvBjB,C;AADAlE,iB,CA2BZmE,Y,GAAe;AACpBzD,aAAwB,EADJ;AAEpBO,sBAAwB,CAFJ;AAGpBC,wBAAwB,CAHJ;AAIpBuB,mBAAwB,UAJJ;AAKpBM,qBAAwB,UALJ;AAMpBC,iBAAwB,MANJ;AAOpBG,iBAAwB,UAPJ;AAQpBE,aAAwB,MARJ;AASpBlC,cAAwB,KATJ;AAUpB0B,qBAAwB,UAVJ;AAWpBV,0BAAwB;AAXJ,C;kBA3BHnC,iB;AA0QpB","file":"PaginationBoxView.js","sourcesContent":["'use strict';\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport createFragment from 'react-addons-create-fragment';\r\nimport PageView from './PageView';\r\nimport BreakView from './BreakView';\r\n\r\n\r\nexport default class PaginationBoxView extends Component {\r\n  static propTypes = {\r\n    pageCount             : PropTypes.number.isRequired,\r\n    pageRangeDisplayed    : PropTypes.number.isRequired,\r\n    marginPagesDisplayed  : PropTypes.number.isRequired,\r\n    previousLabel         : PropTypes.node,\r\n    nextLabel             : PropTypes.node,\r\n    breakLabel            : PropTypes.node,\r\n    hrefBuilder           : PropTypes.func,\r\n    onPageChange          : PropTypes.func,\r\n    initialPage           : PropTypes.number,\r\n    forcePage             : PropTypes.number,\r\n    disableInitialCallback: PropTypes.bool,\r\n    containerClassName    : PropTypes.string,\r\n    pageClassName         : PropTypes.string,\r\n    pageLinkClassName     : PropTypes.string,\r\n    activeClassName       : PropTypes.string,\r\n    activeLinkClassName   : PropTypes.string,\r\n    previousClassName     : PropTypes.string,\r\n    nextClassName         : PropTypes.string,\r\n    previousLinkClassName : PropTypes.string,\r\n    nextLinkClassName     : PropTypes.string,\r\n    disabledClassName     : PropTypes.string,\r\n    disabledLinkClassName : PropTypes.string,\r\n    breakClassName        : PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    pageCount             : 10,\r\n    pageRangeDisplayed    : 2,\r\n    marginPagesDisplayed  : 3,\r\n    activeClassName       : \"selected\",\r\n    previousClassName     : \"previous\",\r\n    nextClassName         : \"next\",\r\n    previousLabel         : \"Previous\",\r\n    nextLabel             : \"Next\",\r\n    breakLabel            : \"...\",\r\n    disabledClassName     : \"disabled\",\r\n    disableInitialCallback: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selected: props.initialPage ? props.initialPage :\r\n                props.forcePage   ? props.forcePage :\r\n                0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { initialPage, disableInitialCallback } = this.props;\r\n    // Call the callback with the initialPage item:\r\n    if (typeof(initialPage) !== 'undefined' && !disableInitialCallback) {\r\n      this.callCallback(initialPage);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (typeof(nextProps.forcePage) !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {\r\n      this.setState({selected: nextProps.forcePage});\r\n    }\r\n  }\r\n\r\n  handlePreviousPage = evt => {\r\n    const { selected } = this.state;\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n    if (selected > 0) {\r\n      this.handlePageSelected(selected - 1, evt);\r\n    }\r\n  };\r\n\r\n  handleNextPage = evt => {\r\n    const { selected } = this.state;\r\n    const { pageCount } = this.props;\r\n\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n    if (selected < pageCount - 1) {\r\n      this.handlePageSelected(selected + 1, evt);\r\n    }\r\n  };\r\n\r\n  handlePageSelected = (selected, evt) => {\r\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\r\n\r\n    if (this.state.selected === selected) return;\r\n\r\n    this.setState({selected: selected});\r\n\r\n    // Call the callback with the new selected item:\r\n    this.callCallback(selected);\r\n  };\r\n\r\n  hrefBuilder(pageIndex) {\r\n    const { hrefBuilder, pageCount } = this.props;\r\n    if (hrefBuilder &&\r\n      pageIndex !== this.state.selected &&\r\n      pageIndex >= 0 &&\r\n      pageIndex < pageCount\r\n    ) {\r\n      return hrefBuilder(pageIndex + 1);\r\n    }\r\n  }\r\n\r\n  callCallback = (selectedItem) => {\r\n    if (typeof(this.props.onPageChange) !== \"undefined\" &&\r\n        typeof(this.props.onPageChange) === \"function\") {\r\n      this.props.onPageChange({selected: selectedItem});\r\n    }\r\n  };\r\n\r\n  getPageElement(index) {\r\n    const { selected } = this.state;\r\n    const {\r\n      pageClassName,\r\n      pageLinkClassName,\r\n      activeClassName,\r\n      activeLinkClassName,\r\n      extraAriaContext\r\n    } = this.props;\r\n\r\n    return <PageView\r\n      onClick={this.handlePageSelected.bind(null, index)}\r\n      selected={selected === index}\r\n      pageClassName={pageClassName}\r\n      pageLinkClassName={pageLinkClassName}\r\n      activeClassName={activeClassName}\r\n      activeLinkClassName={activeLinkClassName}\r\n      extraAriaContext={extraAriaContext}\r\n      href={this.hrefBuilder(index)}\r\n      page={index + 1} />\r\n  }\r\n\r\n  pagination = () => {\r\n    let items = {};\r\n    const {\r\n      pageRangeDisplayed,\r\n      pageCount,\r\n      marginPagesDisplayed,\r\n      breakLabel,\r\n      breakClassName\r\n    } = this.props;\r\n\r\n    const { selected } = this.state;\r\n\r\n    if (pageCount <= pageRangeDisplayed) {\r\n\r\n      for (let index = 0; index < pageCount; index++) {\r\n        items['key' + index] = this.getPageElement(index);\r\n      }\r\n\r\n    } else {\r\n\r\n      let leftSide  = (pageRangeDisplayed / 2);\r\n      let rightSide = (pageRangeDisplayed - leftSide);\r\n\r\n      if (selected > pageCount - pageRangeDisplayed / 2) {\r\n        rightSide = pageCount - selected;\r\n        leftSide  = pageRangeDisplayed - rightSide;\r\n      }\r\n      else if (selected < pageRangeDisplayed / 2) {\r\n        leftSide  = selected;\r\n        rightSide = pageRangeDisplayed - leftSide;\r\n      }\r\n\r\n      let index;\r\n      let page;\r\n      let breakView;\r\n      let createPageView = (index) => this.getPageElement(index);\r\n\r\n      for (index = 0; index < pageCount; index++) {\r\n\r\n        page = index + 1;\r\n\r\n        if (page <= marginPagesDisplayed) {\r\n          items['key' + index] = createPageView(index);\r\n          continue;\r\n        }\r\n\r\n        if (page > pageCount - marginPagesDisplayed) {\r\n          items['key' + index] = createPageView(index);\r\n          continue;\r\n        }\r\n\r\n        if ((index >= selected - leftSide) && (index <= selected + rightSide)) {\r\n          items['key' + index] = createPageView(index);\r\n          continue;\r\n        }\r\n\r\n        let keys            = Object.keys(items);\r\n        let breakLabelKey   = keys[keys.length - 1];\r\n        let breakLabelValue = items[breakLabelKey];\r\n\r\n        if (breakLabel && breakLabelValue !== breakView) {\r\n          breakView = (\r\n            <BreakView\r\n              breakLabel={breakLabel}\r\n              breakClassName={breakClassName}\r\n            />\r\n          );\r\n\r\n          items['key' + index] = breakView;\r\n        }\r\n      }\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      disabledClassName,\r\n      disabledLinkClassName,\r\n      previousClassName,\r\n      nextClassName,\r\n      pageCount,\r\n      containerClassName,\r\n      previousLinkClassName,\r\n      previousLabel,\r\n      nextLinkClassName,\r\n      nextLabel\r\n    } = this.props;\r\n\r\n    const { selected } = this.state;\r\n    \r\n    let disabled = disabledClassName;\r\n    let disabledLink = disabledLinkClassName;\r\n    const previousClasses = classNames(previousClassName,\r\n                                       {[disabled]: selected === 0});\r\n\r\n    const nextClasses = classNames(nextClassName,\r\n                                   {[disabled]: selected === pageCount - 1});\r\n\r\n    const previousLinkClasses = classNames(previousLinkClassName,\r\n                                    {[disabledLink]: selected === 0});\r\n\r\n    const nextLinkClasses = classNames(nextLinkClassName,\r\n                                      {[disabledLink]: selected === pageCount - 1});\r\n\r\n    return (\r\n      <ul className={containerClassName}>\r\n        <li className={previousClasses}>\r\n          <a onClick={this.handlePreviousPage}\r\n             className={previousLinkClasses}\r\n             href={this.hrefBuilder(selected - 1)}\r\n             tabIndex=\"0\"\r\n             onKeyPress={this.handlePreviousPage}>\r\n            {previousLabel}\r\n          </a>\r\n        </li>\r\n\r\n        {createFragment(this.pagination())}\r\n\r\n        <li className={nextClasses}>\r\n          <a onClick={this.handleNextPage}\r\n             className={nextLinkClasses}\r\n             href={this.hrefBuilder(selected + 1)}\r\n             tabIndex=\"0\"\r\n             onKeyPress={this.handleNextPage}>\r\n            {nextLabel}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n"]}