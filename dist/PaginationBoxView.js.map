{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","handlePreviousPage","selected","state","evt","preventDefault","returnValue","handlePageSelected","handleNextPage","pageCount","setState","callCallback","handleBreakClick","index","getForwardJump","getBackwardJump","onPageChange","selectedItem","getAddedAttributes","attributesBuilder","pageIndex","pagination","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","push","getPageElement","leftSide","rightSide","page","breakView","createPageView","length","bind","initialSelected","initialPage","forcePage","disableInitialCallback","extraAriaContext","console","warn","nextProps","forwardJump","backwardJump","hrefBuilder","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","addedPrevAttributes","addedNextAttributes","Component","propTypes","PropTypes","number","isRequired","node","oneOfType","string","func","bool","defaultProps"],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    attributesBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      typeof nextProps.forcePage !== 'undefined' &&\n      this.props.forcePage !== nextProps.forcePage\n    ) {\n      this.setState({ selected: nextProps.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getAddedAttributes = pageIndex => {\n    const { attributesBuilder } = this.props;\n    if (typeof attributesBuilder === 'function') {\n      return attributesBuilder(pageIndex + 1);\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n        addedAttributes={this.getAddedAttributes(index)}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n    const addedPrevAttributes = this.getAddedAttributes(selected - 1);\n    const addedNextAttributes = this.getAddedAttributes(selected + 1);\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n            {...addedPrevAttributes}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n            {...addedNextAttributes}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n"]}